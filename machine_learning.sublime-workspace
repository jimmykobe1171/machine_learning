{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"erro",
				"error_rates"
			],
			[
				"num_o",
				"num_points"
			],
			[
				"devi",
				"deviations〔argument〕"
			],
			[
				"errorate",
				"error_rates"
			],
			[
				"sel",
				"sel_indexes"
			],
			[
				"nump",
				"num_point〔argument〕"
			],
			[
				"inde",
				"indexes〔variable〕"
			],
			[
				"sor",
				"sorted_distance〔variable〕"
			],
			[
				"dis",
				"distance_matrix"
			],
			[
				"E",
				"EuclideanDistance"
			],
			[
				"squa",
				"square_matrix_a"
			],
			[
				"num_p",
				"num_points"
			],
			[
				"err",
				"error_rates〔variable〕"
			],
			[
				"num_po",
				"num_points〔variable〕"
			],
			[
				"testla",
				"test_labels"
			],
			[
				"classifi",
				"classified_labels"
			],
			[
				"cla",
				"classified_labels〔variable〕"
			],
			[
				"ind",
				"indexes〔variable〕"
			],
			[
				"dista",
				"distance_matrix〔variable〕"
			],
			[
				"tran",
				"transpose"
			],
			[
				"get_sq",
				"get_square_test_data〔function〕"
			],
			[
				"trani",
				"traninig_data"
			],
			[
				"sum",
				"sum_matrix〔variable〕"
			],
			[
				"testda",
				"test_data〔argument〕"
			],
			[
				"trai",
				"training_data〔variable〕"
			],
			[
				"lab",
				"labels"
			],
			[
				"tra",
				"training_labels〔variable〕"
			],
			[
				"min",
				"min_index"
			],
			[
				"po",
				"points"
			],
			[
				"nu",
				"num_points"
			],
			[
				"eror",
				"error_rate"
			],
			[
				"test",
				"test_labels〔variable〕"
			],
			[
				"seltra",
				"sel_training_labels"
			],
			[
				"get",
				"get_random_n_points"
			],
			[
				"training",
				"training_labels"
			],
			[
				"mark",
				"marked_dic〔variable〕"
			],
			[
				"mar",
				"marked_dic"
			],
			[
				"vert",
				"vertice"
			],
			[
				"ver",
				"vertice〔argument〕"
			],
			[
				"top",
				"topology_order"
			],
			[
				"to",
				"topology_order"
			],
			[
				"verti",
				"vertices"
			],
			[
				"vis",
				"visited_vertices"
			],
			[
				"back",
				"back_edges"
			],
			[
				"vi",
				"visited_vertices"
			],
			[
				"dfs",
				"dfs_node"
			],
			[
				"dir",
				"directed_vertices"
			],
			[
				"best",
				"best_arr〔variable〕"
			],
			[
				"tm",
				"tmp_arr"
			],
			[
				"len",
				"length"
			],
			[
				"par",
				"patricia"
			],
			[
				"mat",
				"match_left〔function〕"
			],
			[
				"te",
				"test_dict"
			],
			[
				"lef",
				"left_child_index"
			],
			[
				"le",
				"left_child_index"
			],
			[
				"righ",
				"right_child_index"
			],
			[
				"pa",
				"parent_index"
			],
			[
				"EN",
				"ENTITY_TYPE_ATTRACTION〔module〕"
			],
			[
				"ENTT",
				"ENTITY_TYPE_TRANSPORT"
			],
			[
				"ENTITYT",
				"ENTITY_TYPE_TRANSPORT〔variable〕"
			],
			[
				"ENTI",
				"ENTITY_TYPE_RIDE〔variable〕"
			],
			[
				"ENT",
				"ENTITY_TYPE_ATTRACTION〔variable〕"
			],
			[
				"asnot",
				"assertNotEqual〔function〕"
			],
			[
				"dat",
				"datetime"
			],
			[
				"cr",
				"create_operating_calendar_date_item〔function〕"
			],
			[
				"opc",
				"operating_calendar_date_item"
			],
			[
				"opda",
				"operating_calendar_date_item"
			],
			[
				"creat",
				"create_operating_calendar〔function〕"
			],
			[
				"gelo",
				"get_local_date〔module〕"
			],
			[
				"oper",
				"operating_calendar〔variable〕"
			],
			[
				"O",
				"OperatingCalendarDateItem〔class〕"
			],
			[
				"dapvi",
				"dap_view_date"
			],
			[
				"dap",
				"dap_view_date"
			],
			[
				"dap_veiw",
				"dap_view_change_list"
			],
			[
				"Dav",
				"DapViewAdmin〔class〕"
			],
			[
				"rela",
				"related_obj"
			],
			[
				"ENclo",
				"EntityCloseTimeManager〔class〕"
			],
			[
				"hou",
				"hourly_period_vs_park_att_percentage"
			],
			[
				"upda",
				"update_time〔argument〕"
			],
			[
				"H",
				"HourlyTotalATT〔class〕"
			],
			[
				"ca",
				"capacity_percentage_obj"
			],
			[
				"cap",
				"capacity_percentage_obj"
			],
			[
				"S",
				"ShowVsParkATTPercentage〔class〕"
			],
			[
				"ope",
				"operation_times〔variable〕"
			],
			[
				"C",
				"CacheTimeDataCalculator〔class〕"
			],
			[
				"star",
				"start_time"
			],
			[
				"operhou",
				"operation_hours"
			],
			[
				"trasp",
				"transportations〔variable〕"
			],
			[
				"en",
				"entity"
			],
			[
				"ent",
				"entities"
			],
			[
				"Inser",
				"InputEntityListSerializer〔module〕"
			],
			[
				"enti",
				"entity"
			],
			[
				"A",
				"ATT_INPUT_TYPE_TOOL〔variable〕"
			],
			[
				"Acoper",
				"ActivityOperationSerializer〔module〕"
			],
			[
				"ac",
				"activity_constructions"
			],
			[
				"bo",
				"booking_status"
			],
			[
				"fil",
				"filter"
			],
			[
				"Re",
				"Restaurant〔class〕"
			],
			[
				"getloca",
				"get_local_date_time〔module〕"
			],
			[
				"entili",
				"entities_list〔variable〕"
			],
			[
				"Entitlis",
				"EntityListSerializer〔module〕"
			],
			[
				"Cap",
				"CapacityPercentageManager〔class〕"
			],
			[
				"ret",
				"retrieve_num〔argument〕"
			],
			[
				"W",
				"WaitingTimeManager〔class〕"
			],
			[
				"log",
				"log_info〔module〕"
			],
			[
				"last",
				"last_update_time"
			],
			[
				"tim",
				"timedelta〔module〕"
			],
			[
				"Pervpa",
				"PeriodVsParkATTPercentageCalculator"
			],
			[
				"getla",
				"get_latest_obj_of_today"
			],
			[
				"calc",
				"calculator"
			],
			[
				"M",
				"MAINTENANCE_TYPE_PARTIAL_CORDON_OFF"
			],
			[
				"FREQUENCY_W",
				"FREQUENCY_WEEKEND"
			],
			[
				"FR",
				"FREQUENCY_WEEKDAY〔variable〕"
			],
			[
				"ENTITY_TYPE_S",
				"ENTITY_TYPE_SHOW"
			],
			[
				"Capca",
				"CapacityPercentageCalculator〔class〕"
			],
			[
				"calac",
				"calculator"
			],
			[
				"cur",
				"current_att"
			],
			[
				"cal",
				"calculator〔variable〕"
			],
			[
				"Tim",
				"TimeDataCalculator"
			],
			[
				"TIm",
				"TimeDataManager"
			],
			[
				"mo",
				"model"
			],
			[
				"getlas",
				"get_last_n_mins_data〔function〕"
			],
			[
				"Hou",
				"HourlyATTCalculator〔class〕"
			],
			[
				"update",
				"update_time"
			],
			[
				"cach",
				"cache_data〔module〕"
			],
			[
				"filt",
				"filter_dic"
			],
			[
				"updat",
				"update_time"
			],
			[
				"days",
				"day_start"
			]
		]
	},
	"buffers":
	[
		{
			"file": "NN.py",
			"settings":
			{
				"buffer_size": 1935,
				"line_ending": "Unix"
			}
		},
		{
			"file": "problem_1.py",
			"settings":
			{
				"buffer_size": 2812,
				"line_ending": "Unix",
				"name": "from scipy.io import loadmat"
			}
		},
		{
			"file": "problem_2.py",
			"settings":
			{
				"buffer_size": 3323,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"js",
				"Set Syntax: JavaScript"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"obj",
				"Set Syntax: Objective-C"
			],
			[
				"pk",
				"Package Control: Install Package"
			]
		],
		"width": 610.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/zhangjia/Projects/machine_learning"
	],
	"file_history":
	[
		"/Users/zhangjia/Projects/data-structure/dfs.py",
		"/Users/zhangjia/Projects/functional_programming/lab2.hs",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/admins/dap_view_admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/serializers/models/tools.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/serializers/tools_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/tests.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/constants.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/operation_time_managers/operation_time_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/operating_calendar.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/dap_item.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/ocean_park_api_simulator/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/spika/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/watcher/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/zone/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/park_model_data_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/dap_view.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/dap_view.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/scripts/reload_data.sh",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/static/activity/js/dap_view_change_list.js",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/dapview/change_list.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/operating_calendar.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/operating_information.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/operating_normal_date.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/utils/time_utils.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/park_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/entity_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/serializers/activity_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/base_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/last_update_time.txt",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/operatingcalendar/change_list.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/dapitem/change_list.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/static/custom_user/js/change_list.js",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/static/activity/css/change_form.css",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/operatingcalendar/charter_hours_change_form.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/watcher/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/tests.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/management/commands/update_api_data.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/settings_common.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/migrations/0009_seasonalevent_entity_code.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/utils/utils.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/entity_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/models/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/backends.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/models/entity_data.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/zone/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/spika/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/ocean_park_api_simulator/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/views/entity_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/models/today_show.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/entity.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/settings.dev.ningbo.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/views/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/templates/admin/base.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/attraction_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/seasonal_event_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/operation_time_managers/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/urls.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/db/db_bak.sqlite3",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/models/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/dap_item.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/daily_show.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/db/db.sqlite3",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/ride_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/show_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/transportation_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/manage.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/serializers/models/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/serializers/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/urls.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/serializers/models/activity.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/park_cache_data_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/models/park.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/views/park_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/construction_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/operation_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/special_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/urls.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/models/activity.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/activity_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/views/activity_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/seasonal_period.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/park_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/attraction.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/models/park_data.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/scripts/restart.sh",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/settings.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/constants.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/operating_calender.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/constants.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/migrations/0004_auto_20150220_1529.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/cronjobs",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/models/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/commands/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/management/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/data_manager.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/data_managers/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/models/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/models/park_data.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/models/entity_data.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/conf/default_settings.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/conf/__init__.py",
		"/Users/zhangjia/Projects/oversea_buy/www/js/models/customer.js",
		"/Users/zhangjia/Projects/oversea_buy/www/js/controllers/customerDetailCtrl.js",
		"/Users/zhangjia/Projects/oversea_buy/.gitignore",
		"/Users/zhangjia/Projects/oversea_buy/www/js/controllers.js",
		"/Users/zhangjia/Projects/oversea_buy/www/js/services.js",
		"/Users/zhangjia/Projects/oversea_buy/www/js/controllers/customer.js",
		"/Users/zhangjia/Projects/test/test_cordova_angular_yeoman/Gruntfile.js",
		"/Users/zhangjia/Projects/test/test_cordova_angular_yeoman/app/index.html",
		"/Users/zhangjia/Projects/test/test_cordova_yeoman/www/index.html",
		"/Users/zhangjia/Projects/test/test_cordova_yeoman/yeoman/app/scripts/main.js",
		"/Users/zhangjia/Projects/test/test_cordova_yeoman/yeoman/app/index.html"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 112.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"print",
			"deviation_matrix",
			"total_error_rates",
			"get_ordered_indexes_from_central_point",
			"central_point_distance",
			"sorted_distance",
			"square_matrix",
			"get_central_point",
			"sum_matrix",
			"math",
			"sum_matrix",
			"print",
			"tranining_data",
			"traninig_data",
			"1NN",
			"row",
			"n",
			"points",
			"self.origin",
			"vertice",
			"insert",
			"vertex",
			"append",
			"edge",
			"1",
			"1 ",
			"1",
			")\n",
			"calculate_prefix",
			"parent",
			"value",
			"left",
			"NUM",
			"num",
			"100",
			"Parser",
			"return",
			"Int",
			"a",
			"CNum",
			"ch2int",
			"church",
			"changeform_view",
			"is_seasonal_event",
			"get_input_att_entities",
			"ATT_INPUT_TYPE_TOOL",
			"get_input_att_entities",
			"ATT_INPUT_TYPE_TOOL",
			"constants",
			"wt_input_type",
			"ENTITY_TYPE_SHOW",
			"ENTITY_TYPE",
			"status_update_time",
			"att_input_type",
			"get_entity_operation_times_base",
			"summit_day_close_time",
			"park_day_open_time",
			"operating_date",
			"copy",
			"initial",
			"DATE_TIME_FORMAT",
			"all",
			"SuitDateWidget",
			"now, related_obj",
			"should_update_cache",
			"should_update_cache=True",
			"update_today_wt_data",
			"create_att_related_data",
			"hourly_att",
			"hourly_total_att_obj",
			"latest_obj",
			"update_att_related_data",
			"get_today_data_obj_list",
			"FavouriteDashboardItem",
			"favourite_dashboard_items",
			"update_today_hourly_att_data",
			"get_entity_operation_timelines",
			"entity",
			"get_entity_operation_time",
			"entity",
			"get_cache_prefix",
			"data = None\n        try:\n            data = self.calculate_data(model, update_time, input_data, related_obj)\n        except Exception as e:",
			"\"\"\"\n        construct the initial_data dictionary for time data obj initialization,\n        should return the initial_data\n        \"\"\"",
			"def calculate(self, update_time, input_data, related_obj, initial_data):\n        \"\"\"\n        construct the initial_data dictionary for time data obj initialization,\n        should return the initial_data\n        \"\"\"\n        data = None\n        try:\n            data = self.calculate_data(update_time, input_data, related_obj)\n        except Exception as e:\n            log_error('%s: %s' % (self.__class__.__name__, str(e)))\n\n        if data is not None:\n            if isinstance(data, dict):\n                initial_data.update(data)\n            else:\n                initial_data['data'] = data\n            return initial_data\n        else:\n            log_error('%s calculation failed' % self.__class__.__name__)\n            return None",
			"def __init__(self, update_time, input_data=None, related_obj=None):\n        self.update_time = update_time\n        self.input_data = input_data\n        self.related_obj = related_obj\n        self.initial_data = {}\n\n    def get_result(self):\n        return self.calculate(self.update_time, self.input_data, self.related_obj, self.initial_data)\n\n    def calculate(self, update_time, input_data, related_obj, initial_data):\n        \"\"\"\n        construct the initial_data dictionary for time data obj initialization,\n        should return the initial_data\n        \"\"\"\n        data = None\n        try:\n            data = self.calculate_data(update_time, input_data, related_obj)\n        except Exception as e:\n            log_error('%s: %s' % (self.__class__.__name__, str(e)))\n\n        if data is not None:\n            if isinstance(data, dict):\n                initial_data.update(data)\n            else:\n                initial_data['data'] = data\n            return initial_data\n        else:\n            log_error('%s calculation failed' % self.__class__.__name__)\n            return None\n\n    def calculate_data(self, update_time, input_data, related_obj):\n        \"\"\"\n        hook for calculate data attribute\n        \"\"\"\n        return None",
			"OperatingNormalDate",
			"ShowSpecialHour",
			"get_valid_operation_hour_item",
			"timelines",
			"get_entities_of_zones",
			"zone_pk",
			"InputDataSerializer",
			"get_today_discrete_graph_data",
			"get_today_discrete_graph_data_base",
			"get_entity_obj",
			"entity_list",
			"pcs_entity",
			"att",
			"waiting",
			"show_att",
			"TodayLast60MinATTManager",
			"should_update_entity_att",
			"today_wt_data",
			"remain_capacity",
			"TodayLast60MinATTManager",
			"zone.name",
			"period_vs_park_att_percentage",
			"historical_total_group_att_data",
			"today_non_group_variance_data",
			"today_non_group_percentage_data",
			"today_total_att_data",
			"non_group_variance",
			"permission_classes",
			"api_data",
			"special_list",
			"Activity",
			"special",
			"end_date",
			"start_date",
			"construction",
			"get_dap_view_item_data_list",
			"has_indian_menu",
			"wt",
			"name",
			"transportation.name",
			"name",
			"print",
			"show_att"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "NN.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1935,
						"regions":
						{
						},
						"selection":
						[
							[
								854,
								854
							]
						],
						"settings":
						{
							"auto_complete": false,
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-eighties.dark.tmTheme",
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 39.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "problem_1.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2812,
						"regions":
						{
						},
						"selection":
						[
							[
								141,
								141
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_name": "from scipy.io import loadmat",
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-eighties.dark.tmTheme",
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "problem_2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3323,
						"regions":
						{
						},
						"selection":
						[
							[
								3105,
								3105
							]
						],
						"settings":
						{
							"auto_complete": false,
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-eighties.dark.tmTheme",
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 707.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.autopep8":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "machine_learning.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"admin",
				"trunk/pflow_cms/activity/admin.py"
			],
			[
				"mo",
				"trunk/pflow_cms/entity/models.py"
			],
			[
				"mod",
				"trunk/pflow_cms/entity/models.py"
			],
			[
				"setd",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"operti",
				"trunk/pflow_cms/activity/operation_time_managers/operation_time_managers.py"
			],
			[
				"dapi",
				"trunk/pflow_cms/activity/models/dap_item.py"
			],
			[
				"oper",
				"trunk/pflow_cms/activity/models/operating_calendar.py"
			],
			[
				"operca",
				"trunk/pflow_cms/initial_data/operating_calendar.json"
			],
			[
				"ti",
				"trunk/pflow_cms/api_data/utils/time_utils.py"
			],
			[
				"basese",
				"trunk/pflow_cms/api_data/serializers/base_serializer.py"
			],
			[
				"timtu",
				"trunk/pflow_cms/api_data/utils/time_utils.py"
			],
			[
				"changli",
				"trunk/pflow_cms/activity/templates/admin/activity/dapview/change_list.html"
			],
			[
				"da",
				"trunk/pflow_cms/activity/models/dap_view.py"
			],
			[
				"dapv",
				"trunk/pflow_cms/initial_data/dap_view.json"
			],
			[
				"davda",
				"trunk/pflow_cms/activity/admins/dap_view_admin.py"
			],
			[
				"setde",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"ba",
				"trunk/pflow_cms/api_data/data_managers/base.py"
			],
			[
				"base",
				"trunk/pflow_cms/time_data/base.py"
			],
			[
				"enman",
				"trunk/pflow_cms/api_data/data_managers/entity_managers.py"
			],
			[
				"uti",
				"trunk/pflow_cms/api_data/utils/utils.py"
			],
			[
				"view",
				"trunk/pflow_cms/tools/views.py"
			],
			[
				"updatea",
				"trunk/pflow_cms/api_data/management/commands/update_api_data.py"
			],
			[
				"entiv",
				"trunk/pflow_cms/api_data/views/entity_views.py"
			],
			[
				"enda",
				"trunk/pflow_cms/api_data/models/entity_data.py"
			],
			[
				"setcom",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"setni",
				"trunk/pflow_cms/pflow_cms/settings.dev.ningbo.py"
			],
			[
				"entvi",
				"trunk/pflow_cms/api_data/views/entity_views.py"
			],
			[
				"util",
				"trunk/pflow_cms/api_data/utils/utils.py"
			],
			[
				"setji",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"setco",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"settcom",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"setj",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"setcon",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"cons",
				"trunk/pflow_cms/entity/constants.py"
			],
			[
				"maincs",
				"nova/static/css/main.css"
			],
			[
				"main",
				"static/css/main.css"
			],
			[
				"breadcrumb",
				"nova/templates/pages/menus/breadcrumb.html"
			],
			[
				"ad",
				"car_cms/trunk/trades/admin.py"
			],
			[
				"adm",
				"car_cms/trunk/car_user/admin.py"
			],
			[
				"mode",
				"car_cms/trunk/car_user/models.py"
			],
			[
				"const",
				"car_cms/trunk/trades/trades_models/constant.py"
			],
			[
				"resou",
				"car_cms/trunk/car_user/api/resources.py"
			],
			[
				"sms",
				"car_cms/trunk/car_cms/utils/sms_utils.py"
			],
			[
				"api",
				"car_cms/trunk/trades/api.py"
			],
			[
				"pygenca",
				"car_cms/trunk/script/pygen_category.py"
			],
			[
				"pyg",
				"car_cms/trunk/script/pygen_product.py"
			],
			[
				"set",
				"car_cms/trunk/car_cms/settings_common.py"
			],
			[
				"insuacomm",
				"boc_insurance_cms/views/insurance_views_common.py"
			],
			[
				"echinaextend",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_extend_insurance.html"
			],
			[
				"echinaexconfi",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_confirm_filled_form.html"
			],
			[
				"echinabuyer",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_insurance_buyer_info.html"
			],
			[
				"buy",
				"boc_insurance_cms/templates/buy_insurance.html"
			],
			[
				"echinaemai",
				"boc_insurance_cms/templates/emails/buy_e_china_express_insurance_email.html"
			],
			[
				"insurinfo",
				"boc_insurance_cms/templates/mobiles/buy_insurance_info.html"
			],
			[
				"confi",
				"boc_insurance_cms/templates/mobiles/confirm_filled_form.html"
			],
			[
				"buyerin",
				"boc_insurance_cms/templates/mobiles/buyer_info.html"
			],
			[
				"viewcom",
				"boc_insurance_cms/views/insurance_views_common.py"
			],
			[
				"echinabuy",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"buyin",
				"boc_insurance_cms/templates/mobiles/buy_insurance.html"
			],
			[
				"echianemai",
				"boc_insurance_cms/templates/emails/extend_e_china_express_insurance_email.html"
			],
			[
				"echinaexbuyer",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_insurance_buyer_info.html"
			],
			[
				"echinabuycom",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_buy_insurance_complete.html"
			],
			[
				"echinbuy",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"adver",
				"boc_insurance_cms/views/advertisement_views.py"
			],
			[
				"url",
				"boc_insurance_cms/urls.py"
			],
			[
				"insurpr",
				"boc_insurance_cms/models/insurance_profile.py"
			],
			[
				"insu",
				"boc_insurance_cms/models/insurance.py"
			],
			[
				"model",
				"boc_insurance_cms/models/modelform.py"
			],
			[
				"adv",
				"boc_insurance_cms/views/advertisement_views.py"
			],
			[
				"echinainvew",
				"boc_insurance_cms/views/e_china_express_insurance_views.py"
			],
			[
				"insview",
				"boc_insurance_cms/views/insurance_views.py"
			],
			[
				"settincom",
				"boc_insurance_cms/settings_common.py"
			],
			[
				"echininsview",
				"boc_insurance_cms/views/e_china_express_insurance_views.py"
			],
			[
				"ins",
				"boc_insurance_cms/models/insurance.py"
			],
			[
				"dow",
				"website/views/download_image_views.py"
			],
			[
				"settpro",
				"boc_insurance_cms/settings.prod.py"
			],
			[
				"settiua",
				"boc_insurance_cms/settings.uat.py"
			],
			[
				"news",
				"boc_insurance_cms/models/news.py"
			],
			[
				"adtismen",
				"boc_insurance_cms/views/advertisement_views.py"
			],
			[
				"insuview",
				"boc_insurance_cms/views/insurance_views.py"
			],
			[
				"buyinsu",
				"boc_insurance_cms/templates/buy_insurance.html"
			],
			[
				"echinabuyins",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"insura",
				"boc_insurance_cms/models/insurance.py"
			],
			[
				"prod",
				"boc_insurance_cms/models/product.py"
			],
			[
				"echinainscons",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_constant.py"
			],
			[
				"insucom",
				"boc_insurance_cms/views/insurance_views_common.py"
			],
			[
				"echinaurl",
				"boc_insurance_cms/e_china_express_insurance_urls.py"
			],
			[
				"echinabuyinsurance",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"echinaconf",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_confirm_filled_form.html"
			],
			[
				"echinaconfi",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_confirm_filled_form.html"
			],
			[
				"echinabyer",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_insurance_buyer_info.html"
			],
			[
				"echinapro",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_insurance_profile.py"
			],
			[
				"echinpro",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_insurance_profile.py"
			],
			[
				"expovi",
				"boc_insurance_cms/views/export_views.py"
			],
			[
				"settingsco",
				"boc_insurance_cms/settings_common.py"
			],
			[
				"pdf",
				"boc_insurance_cms/utils/pdf_utils.py"
			],
			[
				"emai",
				"boc_insurance_cms/utils/email_utils.py"
			],
			[
				"ex",
				"process_excel/export_excel.php"
			],
			[
				"econs",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_constant.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 263.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
